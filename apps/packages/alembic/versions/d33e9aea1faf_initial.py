"""
Initial Migration

Revision ID: d33e9aea1faf
Revises:
Create Date: 2024-06-10 12:47:22.210127
"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

revision: str = "d33e9aea1faf"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "file_source",
        sa.Column("id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column(
            "minio_uuid",
            sa.UUID(as_uuid=False),
            nullable=True,
            comment="The UUID of the file in the MinIO storage",
        ),
        sa.Column(
            "file_type", sa.Enum("CSV", "XLSX", "PDF", name="filetype"), nullable=False
        ),
        sa.Column(
            "file_metadata",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
            comment="The metadata of the file used to transform the data",
        ),
        sa.Column(
            "last_processed",
            sa.DateTime(),
            nullable=True,
            comment="The last time the file was processed",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_file_source")),
    )
    op.create_table(
        "product",
        sa.Column("id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column(
            "data",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
            comment="The data of the product for Satu.kz",
        ),
        sa.Column(
            "last_processed",
            sa.DateTime(),
            nullable=True,
            comment="The last time the product was processed",
        ),
        sa.Column(
            "source_id",
            sa.UUID(as_uuid=False),
            nullable=True,
            comment="The UUID of the source",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_product")),
    )
    op.create_table(
        "website_source",
        sa.Column("id", sa.UUID(as_uuid=False), nullable=False),
        sa.Column("url", sa.Text(), nullable=False),
        sa.Column("ui_name", sa.Text(), nullable=True, comment="Website title"),
        sa.Column(
            "ui_description", sa.Text(), nullable=True, comment="Website meta description"
        ),
        sa.Column(
            "ui_image", sa.Text(), nullable=True, comment="Website meta image / favicon"
        ),
        sa.Column(
            "product_card_xref",
            sa.Text(),
            nullable=True,
            comment="The cross-reference to the product card",
        ),
        sa.Column(
            "product_properties_mapping_xref",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
            comment="The dictionary which maps the Satu.kz fields to the website cross-references",
        ),
        sa.Column(
            "last_processed",
            sa.DateTime(),
            nullable=True,
            comment="The last time the website was processed",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_website_source")),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("website_source")
    op.drop_table("product")
    op.drop_table("file_source")
    # ### end Alembic commands ###
